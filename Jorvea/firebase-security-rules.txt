// Firebase Firestore Security Rules for Jorvea
// Copy these rules to your Firebase Console -> Firestore Database -> Rules

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data and read others
    match /users/{userId} {
      allow read: if true; // Anyone can read user profiles
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Posts collection - authenticated users can read all, write their own
    match /posts/{postId} {
      allow read: if true; // Anyone can read posts
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid in resource.data.likedBy); // Allow updates for likes
    }
    
    // Reels collection - same as posts
    match /reels/{reelId} {
      allow read: if true; // Anyone can read reels
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid in resource.data.likedBy); // Allow updates for likes
    }
    
    // Stories collection - authenticated users can read all, write their own
    match /stories/{storyId} {
      allow read: if request.auth != null; // Authenticated users can read stories
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Comments collection - authenticated users can read all, write their own
    match /comments/{commentId} {
      allow read: if true; // Anyone can read comments
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Notifications collection - users can read/write their own
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.toUserId;
      allow create: if request.auth != null;
    }
    
    // Follow relationships - authenticated users can read all, write their own
    match /follows/{followId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.followerId || request.auth.uid == resource.data.followingId);
    }
    
    // Likes collection - authenticated users can read all, write their own
    match /likes/{likeId} {
      allow read: if true;
      allow create, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
